#!/bin/bash

#######################################
# Parse command line options
# Options (starting with "--") are stored in $ARGS.
# Non-options are taken as the test name (last one sticks).

declare -A ARGS
for arg in "$@"; do
    if [[ ${arg} == --* ]] ; then ARGS[${arg}]=true
    else ELF=${arg}
    fi
    done

# Add the parameters for connecting via ssh to
# your machine with an stm32 connected to
# UT_SSH_PARAMS
# e.g.
# UT_SSH_PARAMS="-p 22 user@host_with_stm32"

if [ -z "$UT_SSH_PARAMS" ]; then
  GDB_SHELL_BG="&"
  UT_SSH=""
  UT_SLEEP=1
else
  GDB_SHELL_BG=""
  UT_SSH="ssh -f -L 3333:localhost:3333 $UT_SSH_PARAMS"
  UT_SLEEP=4
fi

if [ ${ARGS[--openocd]+_} ] ; then
    cat <<-EEOOFF >> gdb_cmds
        shell ${UT_SSH} killall -q openocd\; openocd -f board/stm32f4discovery.cfg >ocd_stdout.log 2>ocd_stderr.log $GDB_SHELL_BG
        shell sleep ${UT_SLEEP}
	target remote :3333
        monitor arm semihosting enable
        monitor arm semihosting_fileio enable
	EEOOFF
    
       SHUTDOWN="monitor shutdown"
else
    cat <<-EEOOFF >> gdb_cmds
        shell st-util --verbose=0 --semihosting 2>stutil_stderr.log >stutil_stdout.log &
        shell sleep ${UT_SLEEP} 
	target remote :4242
	EEOOFF

       SHUTDOWN=""
fi

if [ ${ARGS[--load]+_} ] ; then
    cat <<-EEOOFF >> gdb_cmds
	load
	EEOOFF
    fi

cat <<-EEOOFF >> gdb_cmds
        monitor reset halt
	break EndofMain
	break abort
	EEOOFF

if [ -z ${ARGS[--debug]+_} ] ; then
    cat <<-EEOOFF >> gdb_cmds
	continue
	set confirm off
        $SHUTDOWN 
	quit
	EEOOFF
    fi

arm-none-eabi-gdb -batch -x gdb_cmds ${ELF}
